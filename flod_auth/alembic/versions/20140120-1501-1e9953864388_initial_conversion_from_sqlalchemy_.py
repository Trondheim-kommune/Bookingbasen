# -*- coding: utf-8 -*-
"""Initial conversion from sqlalchemy create all to alembic

Revision ID: 1e9953864388
Revises: None
Create Date: 2014-01-20 15:01:36.372362

"""

# revision identifiers, used by Alembic.
revision = '1e9953864388'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('credential',
                    sa.Column('db_id', sa.Integer(), nullable=False),
                    sa.Column('id', sa.String(), nullable=False),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('resource_id', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('db_id'),
                    sa.UniqueConstraint('id')
    )
    op.create_table('user',
                    sa.Column('db_id', sa.Integer(), nullable=False),
                    sa.Column('id', sa.String(), nullable=False),
                    sa.Column('authentication_type', sa.String(), nullable=False),
                    sa.Column('private_id', sa.String(), nullable=False),
                    sa.Column('person_id', sa.Integer(), nullable=True),
                    sa.Column('created_on', sa.DateTime(), nullable=False),
                    sa.Column('auth_token', sa.String(), nullable=True),
                    sa.Column('auth_timestamp', sa.DateTime(), nullable=True),
                    sa.Column('misc', sa.PickleType(), nullable=True),
                    sa.PrimaryKeyConstraint('db_id'),
                    sa.UniqueConstraint('id'),
                    sa.UniqueConstraint('person_id'),
                    sa.UniqueConstraint('private_id')
    )
    op.create_table('profile',
                    sa.Column('db_id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('national_id_number', sa.String(), nullable=True),
                    sa.Column('active_directory_id', sa.String(), nullable=True),
                    sa.Column('first_name', sa.String(), nullable=True),
                    sa.Column('last_name', sa.String(), nullable=True),
                    sa.Column('email', sa.String(), nullable=True),
                    sa.Column('phone', sa.String(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['user.db_id'], ),
                    sa.PrimaryKeyConstraint('db_id')
    )
    op.create_table('users_credentials',
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('credential_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['credential_id'], ['credential.db_id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.db_id'], )
    )
    ### end Alembic commands ###


def downgrade():
    raise NotImplementedError('This application does not support downgrades.')