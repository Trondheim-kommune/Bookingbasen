# -*- coding: utf-8 -*-
"""Initial conversion from sqlalchemy create all to alembic

Revision ID: 357cc9fc466b
Revises: None
Create Date: 2014-01-21 08:54:15.993052

"""

# revision identifiers, used by Alembic.
revision = '357cc9fc466b'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('umbrella_organisations',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=200), nullable=True),
                    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('addresses',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('address_line', sa.String(length=200), nullable=True),
                    sa.Column('postal_code', sa.String(length=4), nullable=True),
                    sa.Column('postal_city', sa.String(length=100), nullable=True),
                    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('person_brreg_address',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('address_line', sa.String(length=200), nullable=True),
                    sa.Column('postal_code', sa.String(length=4), nullable=True),
                    sa.Column('postal_city', sa.String(length=100), nullable=True),
                    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('persons',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('first_name', sa.String(length=200), nullable=True),
                    sa.Column('last_name', sa.String(length=200), nullable=True),
                    sa.Column('national_identity_number', sa.String(length=11), nullable=True),
                    sa.Column('status', sa.Enum('unregistered', 'registered', name='person_status_enums'),
                              nullable=True),
                    sa.Column('address_line', sa.String(length=200), nullable=True),
                    sa.Column('postal_code', sa.String(length=4), nullable=True),
                    sa.Column('postal_city', sa.String(length=100), nullable=True),
                    sa.Column('email_address', sa.String(length=150), nullable=True),
                    sa.Column('phone_number', sa.String(length=12), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email_address'),
                    sa.UniqueConstraint('national_identity_number')
    )
    op.create_table('brreg_activity_codes',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('code', sa.String(), nullable=True),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('person_org_assoc_roles',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('role', sa.String(length=200), nullable=True),
                    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('umbrella_organisation_person_associations',
                    sa.Column('umbrella_organisation_id', sa.Integer(), nullable=True),
                    sa.Column('person_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], ),
                    sa.ForeignKeyConstraint(['umbrella_organisation_id'], ['umbrella_organisations.id'], )
    )
    op.create_table('flod_activity_type',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('brreg_activity_code_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['brreg_activity_code_id'], ['brreg_activity_codes.id'], ),
                    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organisations',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('org_number', sa.String(length=10), nullable=True),
                    sa.Column('name', sa.String(length=200), nullable=True),
                    sa.Column('org_form', sa.String(length=50), nullable=True),
                    sa.Column('email_address', sa.String(length=150), nullable=True),
                    sa.Column('phone_number', sa.String(length=12), nullable=True),
                    sa.Column('telefax_number', sa.String(length=12), nullable=True),
                    sa.Column('url', sa.String(length=255), nullable=True),
                    sa.Column('account_number', sa.String(length=15), nullable=True),
                    sa.Column('business_address_id', sa.Integer(), nullable=True),
                    sa.Column('postal_address_id', sa.Integer(), nullable=True),
                    sa.Column('num_members_b20', sa.Integer(), nullable=True),
                    sa.Column('num_members', sa.Integer(), nullable=True),
                    sa.Column('description', sa.Text(), nullable=True),
                    sa.Column('area', sa.Integer(), nullable=True),
                    sa.Column('registered_tkn', sa.Boolean(), nullable=True),
                    sa.ForeignKeyConstraint(['business_address_id'], ['addresses.id'], ),
                    sa.ForeignKeyConstraint(['postal_address_id'], ['addresses.id'], ),
                    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organisation_flod_activity_types',
                    sa.Column('org_id', sa.Integer(), nullable=True),
                    sa.Column('flod_type_list_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['flod_type_list_id'], ['flod_activity_type.id'], ),
                    sa.ForeignKeyConstraint(['org_id'], ['organisations.id'], )
    )
    op.create_table('organisation_brreg_activities',
                    sa.Column('org_id', sa.Integer(), nullable=True),
                    sa.Column('brreg_code_list_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['brreg_code_list_id'], ['brreg_activity_codes.id'], ),
                    sa.ForeignKeyConstraint(['org_id'], ['organisations.id'], )
    )
    op.create_table('umbrella_organisation_oraganisation_associations',
                    sa.Column('umbrella_organisation_id', sa.Integer(), nullable=True),
                    sa.Column('organisation_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['organisation_id'], ['organisations.id'], ),
                    sa.ForeignKeyConstraint(['umbrella_organisation_id'], ['umbrella_organisations.id'], )
    )
    op.create_table('organisation_person_associations',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('organisation_id', sa.Integer(), nullable=True),
                    sa.Column('person_id', sa.Integer(), nullable=True),
                    sa.Column('from_brreg', sa.Boolean(), nullable=True),
                    sa.ForeignKeyConstraint(['organisation_id'], ['organisations.id'], ),
                    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], ),
                    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('person_org_association_roles',
                    sa.Column('org_person_association_id', sa.Integer(), nullable=True),
                    sa.Column('role_association_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['org_person_association_id'], ['organisation_person_associations.id'], ),
                    sa.ForeignKeyConstraint(['role_association_id'], ['person_org_assoc_roles.id'], )
    )
    ### end Alembic commands ###


def downgrade():
    raise NotImplementedError('This application does not support downgrades.')